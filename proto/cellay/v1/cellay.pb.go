// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: cellay/v1/cellay.proto

package cellayv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GamesServiceGetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GamesServiceGetInfoRequest) Reset() {
	*x = GamesServiceGetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetInfoRequest) ProtoMessage() {}

func (x *GamesServiceGetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetInfoRequest.ProtoReflect.Descriptor instead.
func (*GamesServiceGetInfoRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{0}
}

func (x *GamesServiceGetInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GamesServiceGetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GamesServiceGetInfoResponse) Reset() {
	*x = GamesServiceGetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetInfoResponse) ProtoMessage() {}

func (x *GamesServiceGetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetInfoResponse.ProtoReflect.Descriptor instead.
func (*GamesServiceGetInfoResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{1}
}

func (x *GamesServiceGetInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GamesServiceGetInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GamesServiceGetInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GamesServiceGetCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GamesServiceGetCodeRequest) Reset() {
	*x = GamesServiceGetCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetCodeRequest) ProtoMessage() {}

func (x *GamesServiceGetCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetCodeRequest.ProtoReflect.Descriptor instead.
func (*GamesServiceGetCodeRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{2}
}

func (x *GamesServiceGetCodeRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GamesServiceGetCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GamesServiceGetCodeResponse) Reset() {
	*x = GamesServiceGetCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetCodeResponse) ProtoMessage() {}

func (x *GamesServiceGetCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetCodeResponse.ProtoReflect.Descriptor instead.
func (*GamesServiceGetCodeResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{3}
}

func (x *GamesServiceGetCodeResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GamesServiceGetCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GamesServiceGetAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GamesServiceGetAssetsRequest) Reset() {
	*x = GamesServiceGetAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetAssetsRequest) ProtoMessage() {}

func (x *GamesServiceGetAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetAssetsRequest.ProtoReflect.Descriptor instead.
func (*GamesServiceGetAssetsRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{4}
}

func (x *GamesServiceGetAssetsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GameAssetsField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows int32 `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Cols int32 `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
}

func (x *GameAssetsField) Reset() {
	*x = GameAssetsField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAssetsField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAssetsField) ProtoMessage() {}

func (x *GameAssetsField) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAssetsField.ProtoReflect.Descriptor instead.
func (*GameAssetsField) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{5}
}

func (x *GameAssetsField) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *GameAssetsField) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

type GameAssetsTexture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width   int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Texture []byte `protobuf:"bytes,4,opt,name=texture,proto3" json:"texture,omitempty"`
}

func (x *GameAssetsTexture) Reset() {
	*x = GameAssetsTexture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAssetsTexture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAssetsTexture) ProtoMessage() {}

func (x *GameAssetsTexture) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAssetsTexture.ProtoReflect.Descriptor instead.
func (*GameAssetsTexture) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{6}
}

func (x *GameAssetsTexture) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GameAssetsTexture) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GameAssetsTexture) GetTexture() []byte {
	if x != nil {
		return x.Texture
	}
	return nil
}

type GameAssetsLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width   int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Depth   int32  `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	Texture []byte `protobuf:"bytes,4,opt,name=texture,proto3" json:"texture,omitempty"`
}

func (x *GameAssetsLayer) Reset() {
	*x = GameAssetsLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameAssetsLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAssetsLayer) ProtoMessage() {}

func (x *GameAssetsLayer) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAssetsLayer.ProtoReflect.Descriptor instead.
func (*GameAssetsLayer) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{7}
}

func (x *GameAssetsLayer) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GameAssetsLayer) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GameAssetsLayer) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *GameAssetsLayer) GetTexture() []byte {
	if x != nil {
		return x.Texture
	}
	return nil
}

type GamesServiceGetAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Field      *GameAssetsField            `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Background *GameAssetsTexture          `protobuf:"bytes,3,opt,name=background,proto3" json:"background,omitempty"`
	Layers     map[string]*GameAssetsLayer `protobuf:"bytes,4,rep,name=layers,proto3" json:"layers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GamesServiceGetAssetsResponse) Reset() {
	*x = GamesServiceGetAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetAssetsResponse) ProtoMessage() {}

func (x *GamesServiceGetAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetAssetsResponse.ProtoReflect.Descriptor instead.
func (*GamesServiceGetAssetsResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{8}
}

func (x *GamesServiceGetAssetsResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GamesServiceGetAssetsResponse) GetField() *GameAssetsField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *GamesServiceGetAssetsResponse) GetBackground() *GameAssetsTexture {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *GamesServiceGetAssetsResponse) GetLayers() map[string]*GameAssetsLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type GamesServiceGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GamesServiceGetAllRequest) Reset() {
	*x = GamesServiceGetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetAllRequest) ProtoMessage() {}

func (x *GamesServiceGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetAllRequest.ProtoReflect.Descriptor instead.
func (*GamesServiceGetAllRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{9}
}

type GamesServiceGetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*GamesServiceGetInfoResponse `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Total int32                          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GamesServiceGetAllResponse) Reset() {
	*x = GamesServiceGetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceGetAllResponse) ProtoMessage() {}

func (x *GamesServiceGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceGetAllResponse.ProtoReflect.Descriptor instead.
func (*GamesServiceGetAllResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{10}
}

func (x *GamesServiceGetAllResponse) GetGames() []*GamesServiceGetInfoResponse {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *GamesServiceGetAllResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GamesServiceAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Code        string                      `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Field       *GameAssetsField            `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	Background  *GameAssetsTexture          `protobuf:"bytes,5,opt,name=background,proto3" json:"background,omitempty"`
	Layers      map[string]*GameAssetsLayer `protobuf:"bytes,6,rep,name=layers,proto3" json:"layers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GamesServiceAddRequest) Reset() {
	*x = GamesServiceAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceAddRequest) ProtoMessage() {}

func (x *GamesServiceAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceAddRequest.ProtoReflect.Descriptor instead.
func (*GamesServiceAddRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{11}
}

func (x *GamesServiceAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GamesServiceAddRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GamesServiceAddRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GamesServiceAddRequest) GetField() *GameAssetsField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *GamesServiceAddRequest) GetBackground() *GameAssetsTexture {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *GamesServiceAddRequest) GetLayers() map[string]*GameAssetsLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type GamesServiceAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GamesServiceAddResponse) Reset() {
	*x = GamesServiceAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GamesServiceAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GamesServiceAddResponse) ProtoMessage() {}

func (x *GamesServiceAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GamesServiceAddResponse.ProtoReflect.Descriptor instead.
func (*GamesServiceAddResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{12}
}

type MatchesServiceNewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *MatchesServiceNewRequest) Reset() {
	*x = MatchesServiceNewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesServiceNewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesServiceNewRequest) ProtoMessage() {}

func (x *MatchesServiceNewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesServiceNewRequest.ProtoReflect.Descriptor instead.
func (*MatchesServiceNewRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{13}
}

func (x *MatchesServiceNewRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type MatchesServiceNewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MatchesServiceNewResponse) Reset() {
	*x = MatchesServiceNewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesServiceNewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesServiceNewResponse) ProtoMessage() {}

func (x *MatchesServiceNewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesServiceNewResponse.ProtoReflect.Descriptor instead.
func (*MatchesServiceNewResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{14}
}

func (x *MatchesServiceNewResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *MatchesServiceNewResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MatchesServiceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MatchesServiceInfoRequest) Reset() {
	*x = MatchesServiceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesServiceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesServiceInfoRequest) ProtoMessage() {}

func (x *MatchesServiceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesServiceInfoRequest.ProtoReflect.Descriptor instead.
func (*MatchesServiceInfoRequest) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{15}
}

func (x *MatchesServiceInfoRequest) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *MatchesServiceInfoRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MatchesServiceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   int32  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName string `protobuf:"bytes,2,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	PlayerId int32  `protobuf:"varint,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MatchesServiceInfoResponse) Reset() {
	*x = MatchesServiceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cellay_v1_cellay_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesServiceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesServiceInfoResponse) ProtoMessage() {}

func (x *MatchesServiceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cellay_v1_cellay_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesServiceInfoResponse.ProtoReflect.Descriptor instead.
func (*MatchesServiceInfoResponse) Descriptor() ([]byte, []int) {
	return file_cellay_v1_cellay_proto_rawDescGZIP(), []int{16}
}

func (x *MatchesServiceInfoResponse) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchesServiceInfoResponse) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *MatchesServiceInfoResponse) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *MatchesServiceInfoResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_cellay_v1_cellay_proto protoreflect.FileDescriptor

var file_cellay_v1_cellay_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x63, 0x0a, 0x1b, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x41, 0x0a, 0x1b, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73,
	0x22, 0x5b, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6f, 0x0a,
	0x0f, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64,
	0x65, 0x70, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc4,
	0x02, 0x0a, 0x1d, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0x55,
	0x0a, 0x0b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf0, 0x02, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x1a, 0x55, 0x0a, 0x0b, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x0a, 0x18, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x19, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x47, 0x0a, 0x19, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x32, 0xad, 0x05,
	0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x2e, 0x63, 0x65, 0x6c,
	0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x92, 0x41, 0x14, 0x1a, 0x12,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x89, 0x01, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x92, 0x41, 0x14, 0x1a, 0x12, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x73, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x92, 0x41, 0x16, 0x1a, 0x14, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x80, 0x01, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x92, 0x41, 0x18, 0x1a, 0x16, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x20, 0x6c, 0x69, 0x73,
	0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x6c, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x65, 0x6c, 0x6c,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x92,
	0x41, 0x0a, 0x1a, 0x08, 0x41, 0x64, 0x64, 0x20, 0x67, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0b, 0x22, 0x06, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x32, 0xa1, 0x02,
	0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x84, 0x01, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x23, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x92, 0x41, 0x11, 0x1a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20,
	0x6e, 0x65, 0x77, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x77, 0x2f, 0x7b, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x24, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x92,
	0x41, 0x10, 0x1a, 0x0e, 0x47, 0x65, 0x74, 0x20, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x20, 0x69, 0x6e,
	0x66, 0x6f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x7d, 0x42, 0x89, 0x02, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x79, 0x61, 0x6d, 0x69, 0x6b, 0x61, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x76, 0x31, 0x92, 0x41, 0xd0, 0x01, 0x12, 0x0f, 0x0a,
	0x06, 0x43, 0x65, 0x6c, 0x6c, 0x61, 0x79, 0x32, 0x05, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x07,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x50,
	0x0a, 0x03, 0x34, 0x30, 0x33, 0x12, 0x49, 0x0a, 0x47, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20,
	0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x3b, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x34, 0x0a, 0x2a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cellay_v1_cellay_proto_rawDescOnce sync.Once
	file_cellay_v1_cellay_proto_rawDescData = file_cellay_v1_cellay_proto_rawDesc
)

func file_cellay_v1_cellay_proto_rawDescGZIP() []byte {
	file_cellay_v1_cellay_proto_rawDescOnce.Do(func() {
		file_cellay_v1_cellay_proto_rawDescData = protoimpl.X.CompressGZIP(file_cellay_v1_cellay_proto_rawDescData)
	})
	return file_cellay_v1_cellay_proto_rawDescData
}

var file_cellay_v1_cellay_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_cellay_v1_cellay_proto_goTypes = []interface{}{
	(*GamesServiceGetInfoRequest)(nil),    // 0: cellay.v1.GamesServiceGetInfoRequest
	(*GamesServiceGetInfoResponse)(nil),   // 1: cellay.v1.GamesServiceGetInfoResponse
	(*GamesServiceGetCodeRequest)(nil),    // 2: cellay.v1.GamesServiceGetCodeRequest
	(*GamesServiceGetCodeResponse)(nil),   // 3: cellay.v1.GamesServiceGetCodeResponse
	(*GamesServiceGetAssetsRequest)(nil),  // 4: cellay.v1.GamesServiceGetAssetsRequest
	(*GameAssetsField)(nil),               // 5: cellay.v1.GameAssetsField
	(*GameAssetsTexture)(nil),             // 6: cellay.v1.GameAssetsTexture
	(*GameAssetsLayer)(nil),               // 7: cellay.v1.GameAssetsLayer
	(*GamesServiceGetAssetsResponse)(nil), // 8: cellay.v1.GamesServiceGetAssetsResponse
	(*GamesServiceGetAllRequest)(nil),     // 9: cellay.v1.GamesServiceGetAllRequest
	(*GamesServiceGetAllResponse)(nil),    // 10: cellay.v1.GamesServiceGetAllResponse
	(*GamesServiceAddRequest)(nil),        // 11: cellay.v1.GamesServiceAddRequest
	(*GamesServiceAddResponse)(nil),       // 12: cellay.v1.GamesServiceAddResponse
	(*MatchesServiceNewRequest)(nil),      // 13: cellay.v1.MatchesServiceNewRequest
	(*MatchesServiceNewResponse)(nil),     // 14: cellay.v1.MatchesServiceNewResponse
	(*MatchesServiceInfoRequest)(nil),     // 15: cellay.v1.MatchesServiceInfoRequest
	(*MatchesServiceInfoResponse)(nil),    // 16: cellay.v1.MatchesServiceInfoResponse
	nil,                                   // 17: cellay.v1.GamesServiceGetAssetsResponse.LayersEntry
	nil,                                   // 18: cellay.v1.GamesServiceAddRequest.LayersEntry
}
var file_cellay_v1_cellay_proto_depIdxs = []int32{
	5,  // 0: cellay.v1.GamesServiceGetAssetsResponse.field:type_name -> cellay.v1.GameAssetsField
	6,  // 1: cellay.v1.GamesServiceGetAssetsResponse.background:type_name -> cellay.v1.GameAssetsTexture
	17, // 2: cellay.v1.GamesServiceGetAssetsResponse.layers:type_name -> cellay.v1.GamesServiceGetAssetsResponse.LayersEntry
	1,  // 3: cellay.v1.GamesServiceGetAllResponse.games:type_name -> cellay.v1.GamesServiceGetInfoResponse
	5,  // 4: cellay.v1.GamesServiceAddRequest.field:type_name -> cellay.v1.GameAssetsField
	6,  // 5: cellay.v1.GamesServiceAddRequest.background:type_name -> cellay.v1.GameAssetsTexture
	18, // 6: cellay.v1.GamesServiceAddRequest.layers:type_name -> cellay.v1.GamesServiceAddRequest.LayersEntry
	7,  // 7: cellay.v1.GamesServiceGetAssetsResponse.LayersEntry.value:type_name -> cellay.v1.GameAssetsLayer
	7,  // 8: cellay.v1.GamesServiceAddRequest.LayersEntry.value:type_name -> cellay.v1.GameAssetsLayer
	0,  // 9: cellay.v1.GamesService.GetInfo:input_type -> cellay.v1.GamesServiceGetInfoRequest
	2,  // 10: cellay.v1.GamesService.GetCode:input_type -> cellay.v1.GamesServiceGetCodeRequest
	4,  // 11: cellay.v1.GamesService.GetAssets:input_type -> cellay.v1.GamesServiceGetAssetsRequest
	9,  // 12: cellay.v1.GamesService.GetAll:input_type -> cellay.v1.GamesServiceGetAllRequest
	11, // 13: cellay.v1.GamesService.Add:input_type -> cellay.v1.GamesServiceAddRequest
	13, // 14: cellay.v1.MatchesService.New:input_type -> cellay.v1.MatchesServiceNewRequest
	15, // 15: cellay.v1.MatchesService.Info:input_type -> cellay.v1.MatchesServiceInfoRequest
	1,  // 16: cellay.v1.GamesService.GetInfo:output_type -> cellay.v1.GamesServiceGetInfoResponse
	3,  // 17: cellay.v1.GamesService.GetCode:output_type -> cellay.v1.GamesServiceGetCodeResponse
	8,  // 18: cellay.v1.GamesService.GetAssets:output_type -> cellay.v1.GamesServiceGetAssetsResponse
	10, // 19: cellay.v1.GamesService.GetAll:output_type -> cellay.v1.GamesServiceGetAllResponse
	12, // 20: cellay.v1.GamesService.Add:output_type -> cellay.v1.GamesServiceAddResponse
	14, // 21: cellay.v1.MatchesService.New:output_type -> cellay.v1.MatchesServiceNewResponse
	16, // 22: cellay.v1.MatchesService.Info:output_type -> cellay.v1.MatchesServiceInfoResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_cellay_v1_cellay_proto_init() }
func file_cellay_v1_cellay_proto_init() {
	if File_cellay_v1_cellay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cellay_v1_cellay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAssetsField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAssetsTexture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameAssetsLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceGetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GamesServiceAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesServiceNewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesServiceNewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesServiceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cellay_v1_cellay_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesServiceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cellay_v1_cellay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cellay_v1_cellay_proto_goTypes,
		DependencyIndexes: file_cellay_v1_cellay_proto_depIdxs,
		MessageInfos:      file_cellay_v1_cellay_proto_msgTypes,
	}.Build()
	File_cellay_v1_cellay_proto = out.File
	file_cellay_v1_cellay_proto_rawDesc = nil
	file_cellay_v1_cellay_proto_goTypes = nil
	file_cellay_v1_cellay_proto_depIdxs = nil
}
